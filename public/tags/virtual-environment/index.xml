<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Virtual Environment on My Blog Website</title>
    <link>http://localhost:35675/tags/virtual-environment/</link>
    <description>Recent content in Virtual Environment on My Blog Website</description>
    <generator>Hugo -- 0.129.0</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 31 Dec 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:35675/tags/virtual-environment/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Intro to Regex in Python</title>
      <link>http://localhost:35675/posts/post_virtualenvironment/</link>
      <pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:35675/posts/post_virtualenvironment/</guid>
      <description>1. What is a Virtual Environment? A Python virtual environment is a self-contained directory that includes its own Python interpreter and libraries. This setup is useful because it allows each project to use specific packages and versions without conflicts.
For example, you might have one project that requires Flask 1.1 and another that needs Flask 2.0. Virtual environments let you keep these projects separate.
2. How to Create a Virtual Environment To create a virtual environment, use Pythonâ€™s venv module.</description>
    </item>
  </channel>
</rss>
